pipeline {
    parameters {
        booleanParam(name: 'Publish', defaultValue: false, description: 'Whether to publish the crate to crates.io')
    }

    agent any

    stages {
        // Regenerates the FFI bindings and increments the package version number
        stage('Regenerate Bindings') {
            steps {
                powershell '''cd sapiens-sys

                # Generate bindings
                mkdir extern
                cd extern
                git clone https://github.com/mjdave/sapiens-mod-creation.git
                cd ..
                bindgen --impl-partialeq --impl-debug --with-derive-default --with-derive-eq -o src/bindings.rs resources/wrapper.h -- -Iextern/sapiens-mod-creation/SPlugins/include/
                Remove-Item -Recurse -Force extern

                # Update version
                $ManifestFileName = "Cargo.toml"
                $ManifestFile = Get-Content $ManifestFileName
                $ManifestFileVersion = ($ManifestFile | Select -Index 2).Split('.')
                $NewVersion = "{0}.{1}.{2}" -f $ManifestFileVersion[0], ([int]$ManifestFileVersion[1] + 1), $ManifestFileVersion[2]
                $ManifestFile -Replace "version = .\d+.\d+.\d+.", $NewVersion | Set-Content $ManifestFileName

                # Commit results
                git add Cargo.toml
                git commit -m "Increment version"
                git push origin HEAD:master
                '''
            }
        }

        // Compiles the FFI bindings into a crate
        stage('Build') {
            steps {
                powershell "cargo build --name sapiens-sys"
            }
        }

        // Publishes new version of bindings
        stage('Publish') {
            when {
                expression { Publish == true }
            }

            steps {
                powershell "echo Publishing"
            }
        }
    }
}